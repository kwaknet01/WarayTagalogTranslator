{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\redemption\\\\PycharmProjects\\\\translator\\\\src\\\\components\\\\home.jsx\";\nimport React, { Component } from 'react'; //import express from 'express';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      output: \"Nothing to show\"\n    };\n\n    _this.handleLaunch = function () {\n      //this.setState({output : \"launch clicked\"})\n      // const spawn = require(\"child_process\").spawn;\n      // const pythonProcess = spawn('python', [\"C:\\\\Users\\\\redemption\\\\Downloads\\\\scalable web apps\\\\trainNeuralTranslation.py\"]);\n      // pythonProcess.stdout.on('data', (data) => {\n      //     this.setState({output : data})\n      // });\n\n      /* const express = require('express')\r\n       const app = express()\r\n         app.get('/', (req, res) => {\r\n             const { spawn } = require('child_process');\r\n           const pyProg = spawn('python', ['C:\\\\\\\\Users\\\\\\\\redemption\\\\\\\\Downloads\\\\\\\\scalable web apps\\\\\\\\trainNeuralTranslation.py']);\r\n             pyProg.stdout.on('data', function(data) {\r\n                 console.log(data.toString());\r\n               res.write(data);\r\n               res.end('end');\r\n           });\r\n       })\r\n         app.listen(3000, () => console.log('Application listening on port 3000')) */\n      var express = require('express');\n\n      var app = express();\n      var runPy = new Promise(function (success, nosuccess) {\n        var _require = require('child_process'),\n            spawn = _require.spawn;\n\n        var pyProg = spawn('python', [\"C:\\\\\\\\Users\\\\\\\\redemption\\\\\\\\Downloads\\\\\\\\scalable web apps\\\\\\\\trainNeuralTranslation.py\"]);\n        pyProg.stdout.on('data', function (data) {\n          success(data);\n        });\n        pyProg.stderr.on('data', function (data) {\n          nosuccess(data);\n        });\n      });\n      app.get('/', function (req, res) {\n        res.write('welcome\\n');\n        runPy.then(function (fromRunpy) {\n          console.log(fromRunpy.toString());\n          res.end(fromRunpy);\n        });\n      });\n      app.listen(3000, function () {\n        return console.log('Application listening on port 3000!');\n      });\n    };\n\n    _this.handleEvaluate = function () {\n      _this.setState({\n        output: \"evaluate clicked\"\n      });\n    };\n\n    _this.handleReverse = function () {\n      _this.setState({\n        output: \"reverse clicked\"\n      });\n    };\n\n    _this.handleEpoch = function () {\n      _this.setState({\n        output: \"epoch clicked\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"English to German Translator\")), React.createElement(\"div\", {\n        id: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-primary\",\n        onClick: this.handleLaunch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Launch\"), React.createElement(\"button\", {\n        className: \"btn-primary ml13\",\n        onClick: this.handleEvaluate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Evaluate\"), React.createElement(\"button\", {\n        className: \"btn-primary ml13\",\n        onClick: this.handleReverse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Reverse Phrase Order\"), React.createElement(\"button\", {\n        className: \"btn-primary ml13\",\n        onClick: this.handleEpoch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Set Epochs\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Display Output:\"), React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.output));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\redemption\\PycharmProjects\\translator\\src\\components\\home.jsx"],"names":["React","Component","Home","state","output","handleLaunch","express","require","app","runPy","Promise","success","nosuccess","spawn","pyProg","stdout","on","data","stderr","get","req","res","write","then","fromRunpy","console","log","toString","end","listen","handleEvaluate","setState","handleReverse","handleEpoch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAG;AADL,K;;UAIRC,Y,GAAe,YAAM;AACjB;AACD;AACA;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AAkBC,UAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,UAAIC,GAAG,GAAGF,OAAO,EAAjB;AAEA,UAAIG,KAAK,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AAAA,uBAEhCL,OAAO,CAAC,eAAD,CAFyB;AAAA,YAE1CM,KAF0C,YAE1CA,KAF0C;;AAGlD,YAAMC,MAAM,GAAGD,KAAK,CAAC,QAAD,EAAW,CAAC,0FAAD,CAAX,CAApB;AAEAC,QAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,MAAjB,EAAyB,UAAUC,IAAV,EAAgB;AACrCN,UAAAA,OAAO,CAACM,IAAD,CAAP;AACH,SAFD;AAIAH,QAAAA,MAAM,CAACI,MAAP,CAAcF,EAAd,CAAiB,MAAjB,EAAyB,UAACC,IAAD,EAAU;AAC/BL,UAAAA,SAAS,CAACK,IAAD,CAAT;AACH,SAFD;AAIH,OAbW,CAAZ;AAeAT,MAAAA,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAAA,GAAG,CAACC,KAAJ,CAAU,WAAV;AAEAb,QAAAA,KAAK,CAACc,IAAN,CAAW,UAAUC,SAAV,EAAqB;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,QAAV,EAAZ;AACAN,UAAAA,GAAG,CAACO,GAAJ,CAAQJ,SAAR;AACH,SAHD;AAIH,OAPD;AASAhB,MAAAA,GAAG,CAACqB,MAAJ,CAAW,IAAX,EAAiB;AAAA,eAAMJ,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAN;AAAA,OAAjB;AACH,K;;UAEAI,c,GAAiB,YAAM;AACpB,YAAKC,QAAL,CAAc;AAAC3B,QAAAA,MAAM,EAAG;AAAV,OAAd;AACH,K;;UAEC4B,a,GAAgB,YAAM;AACpB,YAAKD,QAAL,CAAc;AAAC3B,QAAAA,MAAM,EAAG;AAAV,OAAd;AACH,K;;UAEE6B,W,GAAc,YAAM;AACnB,YAAKF,QAAL,CAAc;AAAC3B,QAAAA,MAAM,EAAG;AAAV,OAAd;AACH,K;;;;;;;6BAEQ;AACL,aAEO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CADJ,EAII;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAKyB,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAKE,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHA,EAIA;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAKC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,CAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVJ,EAWI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK9B,KAAL,CAAWC,MADhB,CAXJ,CAFP;AAmBH;;;;EA9FcH,S;;AAiGnB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react';\r\n//import express from 'express';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        output : \"Nothing to show\"\r\n    };\r\n\r\n    handleLaunch = () => {\r\n        //this.setState({output : \"launch clicked\"})\r\n       // const spawn = require(\"child_process\").spawn;\r\n       // const pythonProcess = spawn('python', [\"C:\\\\Users\\\\redemption\\\\Downloads\\\\scalable web apps\\\\trainNeuralTranslation.py\"]);\r\n\r\n       // pythonProcess.stdout.on('data', (data) => {\r\n       //     this.setState({output : data})\r\n       // });\r\n\r\n       /* const express = require('express')\r\n        const app = express()\r\n\r\n        app.get('/', (req, res) => {\r\n\r\n            const { spawn } = require('child_process');\r\n            const pyProg = spawn('python', ['C:\\\\\\\\Users\\\\\\\\redemption\\\\\\\\Downloads\\\\\\\\scalable web apps\\\\\\\\trainNeuralTranslation.py']);\r\n\r\n            pyProg.stdout.on('data', function(data) {\r\n\r\n                console.log(data.toString());\r\n                res.write(data);\r\n                res.end('end');\r\n            });\r\n        })\r\n\r\n        app.listen(3000, () => console.log('Application listening on port 3000')) */\r\n\r\n        let express = require('express');\r\n        let app = express();\r\n\r\n        let runPy = new Promise(function (success, nosuccess) {\r\n\r\n            const { spawn } = require('child_process');\r\n            const pyProg = spawn('python', ['C:\\\\\\\\Users\\\\\\\\redemption\\\\\\\\Downloads\\\\\\\\scalable web apps\\\\\\\\trainNeuralTranslation.py']);\r\n\r\n            pyProg.stdout.on('data', function (data) {\r\n                success(data);\r\n            });\r\n\r\n            pyProg.stderr.on('data', (data) => {\r\n                nosuccess(data);\r\n            });\r\n\r\n        });\r\n\r\n        app.get('/', (req, res) => {\r\n            res.write('welcome\\n');\r\n\r\n            runPy.then(function (fromRunpy) {\r\n                console.log(fromRunpy.toString());\r\n                res.end(fromRunpy);\r\n            });\r\n        })\r\n\r\n        app.listen(3000, () => console.log('Application listening on port 3000!'))\r\n    };\r\n\r\n     handleEvaluate = () => {\r\n        this.setState({output : \"evaluate clicked\"})\r\n    };\r\n\r\n      handleReverse = () => {\r\n        this.setState({output : \"reverse clicked\"})\r\n    };\r\n\r\n       handleEpoch = () => {\r\n        this.setState({output : \"epoch clicked\"})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n               <div className=\"mainContent\">\r\n                   <div id=\"title\">\r\n                       <h1>English to German Translator</h1>\r\n                   </div>\r\n                   <div id=\"buttons\">\r\n                   <button className=\"btn-primary\" onClick={this.handleLaunch}>Launch</button>\r\n                   <button className=\"btn-primary ml13\" onClick={this.handleEvaluate}>Evaluate</button>\r\n                   <button className=\"btn-primary ml13\" onClick={this.handleReverse}>Reverse Phrase Order</button>\r\n                   <button className=\"btn-primary ml13\" onClick={this.handleEpoch}>Set Epochs</button>\r\n                   </div>\r\n                   <p>Display Output:</p>\r\n                   <div id=\"content\">\r\n                       {this.state.output}\r\n                   </div>\r\n               </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}